import 'dart:convert';import 'package:get_put_delete/model/add_post.dart';import 'package:get_put_delete/model/all_post.dart';import 'package:get_put_delete/model/comment.dart';import 'package:get_put_delete/model/detail.dart';import 'package:get_put_delete/model/update_post.dart';import 'package:http/http.dart';class ApiProvider {  String baseUrl = 'https://jsonplaceholder.typicode.com';  Client client = Client();  Future<List<AllPost>> getAllPost() async {    Response response = await client.get('$baseUrl/posts');    print(' Response ${response.body}');    if (response.statusCode == 200) {      return allPostFromJson(response.body);    } else {      throw Exception(response.statusCode);    }  }  Future<List<Comment>> getComment(String id) async {    Response response = await client.get('$baseUrl/comments?postId=$id');    if (response.statusCode == 200) {      return commentFromJson(response.body);    } else {      throw Exception(response.statusCode);    }  }  Future<Detail> getDetail(String id) async {    Response response = await client.get('$baseUrl/posts/$id');    if (response.statusCode == 200) {      return Detail.fromJson(jsonDecode(response.body));    } else {      throw Exception(response.statusCode);    }  }  Future<AddPost> addPost(String title, String body) async {    var jsonBody = {"title": title,"body": body,"userId": "1"};  //  Map<String,String> headers = {"Content-Type": "application/json"};    print('$title --- $body');    print('$baseUrl');    Response response = await client.post('$baseUrl/posts/', body: jsonBody );    print('${response.statusCode}');    if (response.statusCode == 201) {      return AddPost.fromJson(jsonDecode(response.body));    } else {      throw Exception(response.statusCode);    }  }  Future<UpdatePost> updatePost(String title, String body, String id) async {    var jsonBody = {"title": title,"body": body,"userId": "1"};    //  Map<String,String> headers = {"Content-Type": "application/json"};    print('$title --- $body');    print('$baseUrl');    Response response = await client.put('$baseUrl/posts/$id', body: jsonBody );    print('${response.statusCode}');    if (response.statusCode == 200) {      return UpdatePost.fromJson(jsonDecode(response.body));    } else {      throw Exception(response.statusCode);    }  }  Future<bool> deletePost(String id) async {    //  Map<String,String> headers = {"Content-Type": "application/json"};    Response response = await client.delete('$baseUrl/posts/$id');    print('${response.statusCode}');    if (response.statusCode == 200) {      return true;    } else {      throw Exception(response.statusCode);    }  }}