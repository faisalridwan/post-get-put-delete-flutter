import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:get_put_delete/data/api_provider.dart';import 'package:get_put_delete/model/all_post.dart';import 'package:get_put_delete/model/comment.dart';import 'package:get_put_delete/model/detail.dart';import 'package:get_put_delete/page/updatepost_page.dart';class DetailPage extends StatefulWidget {  final AllPost allPost;  const DetailPage({Key key, this.allPost}) : super(key: key);  @override  _DetailPageState createState() => _DetailPageState();}class _DetailPageState extends State<DetailPage> {  ApiProvider provider = ApiProvider();  Future<Detail> detail;  Future<List<Comment>> comment;  Detail halamanDetail;  @override  void initState() {    detail = provider.getDetail(widget.allPost.id.toString());    comment = provider.getComment(widget.allPost.id.toString());    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        actions: <Widget>[          IconButton(            icon: Icon(Icons.edit, color: Colors.black,),            onPressed: (){              Navigator.of(context).push(                MaterialPageRoute(                  builder: (BuildContext context) => UpdatePostPage(                    detail :  halamanDetail,                  ),                ),              );            },          )        ],        centerTitle: true,        title: Text('DETAIL POST', style: TextStyle(color: Colors.black),),        backgroundColor: Colors.white,        leading: IconButton(          icon: Icon(            Icons.arrow_back,            color: Colors.black,          ),          onPressed: () {            Navigator.pop(context);          },        ),      ),      body: FutureBuilder(        future: detail,        builder: (BuildContext context, AsyncSnapshot snapshot) {          Detail detail = snapshot.data;          if (snapshot.hasData) {            halamanDetail = detail;            return description(detail);          } else if (snapshot.hasError) {            print("hass error : ${snapshot.hasError}");            return Text('eror has');          } else {            print('Lagi loading');            return Center(child: CircularProgressIndicator());          }        },      ),    );  }  Column description(Detail detail) {    return Column(      crossAxisAlignment: CrossAxisAlignment.start,      children: <Widget>[        Container(          margin: EdgeInsets.only(left: 20, top: 20),          child: Text(            'Name : ${detail.title}',            style: TextStyle(fontWeight: FontWeight.bold),          ),        ),        Container(          margin: EdgeInsets.only(left: 20, top: 20),          child: Text('Body : ${detail.body}'),        ),        Container(          margin: EdgeInsets.only(left: 10, top: 10),          child: Text(            "Comment : ",            style: TextStyle(fontWeight: FontWeight.bold, fontSize: 20),          ),        ),        Container(          child: FutureBuilder(              future: comment,              builder: (BuildContext context, AsyncSnapshot snapshot) {                List<Comment> comment = snapshot.data;                if (snapshot.hasData) {                  return Expanded(                      child: Container(                    child: ListView.builder(                      shrinkWrap: true,                      itemCount: comment.length,                      itemBuilder: (BuildContext context, int index) {                        return Container(                          margin: EdgeInsets.all(10),                          height: 150,                          child: Card(                            shape: RoundedRectangleBorder(                              borderRadius:                                  BorderRadius.all(Radius.circular(10)),                            ),                            child: Column(                              crossAxisAlignment: CrossAxisAlignment.start,                              children: <Widget>[                                Container(                                    margin: EdgeInsets.all(5),                                    child: Text(                                        'Nama : ${comment[index].name.toString()}')),                                Container(                                  margin: EdgeInsets.all(5),                                  child: Text(                                      'Email : ${comment[index].email.toString()}'),                                ),                                Container(                                  margin: EdgeInsets.all(5),                                  child: Text(                                      'Body : ${comment[index].body.toString()}'),                                ),                              ],                            ),                          ),                        );                      },                    ),                  ));                } else if (snapshot.hasError) {                  print('Has Error : ${snapshot.hasError}');                  return Text('ERROR !!!!!!');                } else {                  print('Lagi Loading');                  return CircularProgressIndicator();                }              }),        )      ],    );  }}