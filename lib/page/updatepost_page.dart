import 'package:flutter/material.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:get_put_delete/data/api_provider.dart';import 'package:get_put_delete/model/detail.dart';import 'package:get_put_delete/model/update_post.dart';class UpdatePostPage extends StatefulWidget {  final Detail detail;  const UpdatePostPage({Key key, this.detail}) : super(key: key);  @override  _UpdatePostPageState createState() => _UpdatePostPageState();}class _UpdatePostPageState extends State<UpdatePostPage> {  Future<UpdatePost> updatePost;  ApiProvider provider = ApiProvider();  bool _isFieldTitleValid;  bool _isFieldBodyValid;  TextEditingController _controllerTitle = TextEditingController();  TextEditingController _controllerBody = TextEditingController();  @override  void initState() {    _controllerTitle.text = widget.detail.title;    _controllerBody.text = widget.detail.body;    super.initState();  }  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(        centerTitle: true,        title: Text(          'UPDATE POST',          style: TextStyle(color: Colors.black),        ),        backgroundColor: Colors.white,        leading: IconButton(          icon: Icon(            Icons.arrow_back,            color: Colors.black,          ),          onPressed: () {            Navigator.pop(context);          },        ),      ),      body: Column(        children: <Widget>[          FutureBuilder(            future: updatePost,            builder: (BuildContext context, AsyncSnapshot snapshot) {              if (snapshot.hasData) {                return Column(                  children: <Widget>[                    Container(                      margin: EdgeInsets.all(10),                      child: TextField(                        maxLines: null,                        maxLength: 200,                        controller: _controllerTitle,                        keyboardType: TextInputType.text,                        decoration: InputDecoration(                          labelText: "Title Name",                          errorText:                              _isFieldTitleValid == null || _isFieldTitleValid                                  ? null                                  : "FTitle Name is required",                        ),                      ),                    ),                    Container(                      margin: EdgeInsets.all(10),                      child: TextField(                        minLines: 5,                        maxLines: null,                        maxLength: 200,                        controller: _controllerBody,                        keyboardType: TextInputType.multiline,                        decoration: InputDecoration(                          labelText: "Body name",                          errorText:                              _isFieldBodyValid == null || _isFieldBodyValid                                  ? null                                  : "Body name is required",                        ),                      ),                    ),                  ],                );              } else if (snapshot.hasError) {                print('Has Error : ${snapshot.hasError}');                return Text(' ERROR !!!');              } else {                print('Sedang Loading !!!!!!');                return Column(                  children: <Widget>[                    Container(                      margin: EdgeInsets.all(10),                      child: TextField(                        maxLines: null,                        maxLength: 200,                        controller: _controllerTitle,                        keyboardType: TextInputType.text,                        decoration: InputDecoration(                          labelText: "Title Name",                          errorText:                              _isFieldTitleValid == null || _isFieldTitleValid                                  ? null                                  : "FTitle Name is required",                        ),                      ),                    ),                    Container(                      margin: EdgeInsets.all(10),                      child: TextField(                        minLines: null,                        maxLines: null,                        maxLength: 200,                        controller: _controllerBody,                        keyboardType: TextInputType.text,                        decoration: InputDecoration(                          labelText: "Body name",                          errorText:                              _isFieldBodyValid == null || _isFieldBodyValid                                  ? null                                  : "Body name is required",                        ),                      ),                    ),                  ],                );              }            },          ),          FutureBuilder(            future: updatePost,            builder: (BuildContext context, AsyncSnapshot snapshot) {              if (snapshot.hasData) {                Fluttertoast.showToast(                    msg: "Success",                    toastLength: Toast.LENGTH_SHORT,                    gravity: ToastGravity.CENTER,                    timeInSecForIos: 1,                    backgroundColor: Colors.red,                    textColor: Colors.white,                    fontSize: 16.0);                Navigator.pop(context);                return Container(                  margin: EdgeInsets.all(10),                  child: RaisedButton(                    onPressed: () {                      String body = _controllerBody.text.toString();                      String title = _controllerTitle.text.toString();                      setState(() {                        updatePost = provider.updatePost(                            title, body, '${widget.detail.id.toString()}');                      });                    },                    child: Text(                      "update".toUpperCase(),                      style: TextStyle(                        color: Colors.white,                      ),                    ),                    color: Colors.black,                  ),                );              } else if (snapshot.hasError) {                print('Has Error : ${snapshot.hasError}');                return Text(' ERROR !!!');              } else {                print('Sedang Loading !!!!!!');                return Container(                  margin: EdgeInsets.all(10),                  child: RaisedButton(                    onPressed: () {                      String body = _controllerBody.text.toString();                      String title = _controllerTitle.text.toString();                      setState(                        () {                          updatePost = provider.updatePost(                              title, body, '${widget.detail.id.toString()}');                        },                      );                    },                    child: Text(                      "update".toUpperCase(),                      style: TextStyle(                        color: Colors.white,                      ),                    ),                    color: Colors.black,                  ),                );              }            },          ),        ],      ),    );  }}